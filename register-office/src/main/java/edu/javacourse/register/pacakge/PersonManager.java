package edu.javacourse.register.pacakge;

import edu.javacourse.register.domain.Person;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.boot.Metadata;
import org.hibernate.boot.MetadataSources;
import org.hibernate.boot.registry.StandardServiceRegistry;
import org.hibernate.boot.registry.StandardServiceRegistryBuilder;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import java.util.List;

/***
 * That class manipulate data from person table located in register_office DB
 */
public class PersonManager {

    public static void main(String[] args) {
        sessionExample();

        jpaExample();
    }

    /**
     * Work with Config DB and external classes using Hibernate realization of JPA spec
     */
    private static void jpaExample() {
        EntityManagerFactory emf = buildEntityManagerFactory();
        EntityManager em = emf.createEntityManager();

        em.getTransaction().begin();

        Person p = new Person();
        p.setFirstName("Алексей");
        p.setLastName("Федоров");

        em.persist(p);
        System.out.println(p.getPersonId());

        em.getTransaction().commit();
        em.close();

        em = emf.createEntityManager();
        List personsFromDB = em.createQuery("FROM Person").getResultList();
        personsFromDB.forEach(System.out::println);

        em.close();

    }

    /**
     * Work with Config DB and external classes using Hibernate realization
     */
    private static void sessionExample() {
        SessionFactory sessionFactory = buildSessionFactory();

        System.out.println();
        System.out.println();
        System.out.println();

        Session session = sessionFactory.openSession();

        //Start transaction to modify data from register_office DB
        session.getTransaction().begin();

        Person person = new Person();
        person.setFirstName("Василий");
        person.setLastName("Сидоров");

        //Save Person entity in register_office DB without Id using INSERT (Id will be autogenerated).
        //return Serializable id describe result of saving Person entity into table from register_office DB
        Long id = (Long) session.save(person);
        System.out.println(id);

        session.getTransaction().commit();
        session.close();

        //Get added person with "id" identifier from "person" table of city_register DB
        session = sessionFactory.openSession();
        Person personFromDB = session.get(Person.class, id);
        System.out.println(personFromDB);
        session.close();

        session = sessionFactory.openSession();
        List<Person> list = session.createQuery("FROM Person", Person.class).list();
        list.forEach(System.out::println);
        session.close();
    }

    private static EntityManagerFactory buildEntityManagerFactory() {
        try {
            EntityManagerFactory emf = Persistence.createEntityManagerFactory("persistence");

            return emf;
        } catch (Throwable ex) {
            System.err.println("Initial EntityManagerFactory creation failed." + ex);
            throw new ExceptionInInitializerError(ex);
        }
    }

    /**
     * Build Hibernate SessionFactory to get sessions to modify data from DB.
     * @return
     */
    private static SessionFactory buildSessionFactory() {
        try {
            StandardServiceRegistry serviceRegistry = new StandardServiceRegistryBuilder()
                    .configure("hibernate.cfg.xml").build();

            Metadata metadata = new MetadataSources(serviceRegistry).getMetadataBuilder().build();

            return metadata.getSessionFactoryBuilder().build();
        } catch (Throwable ex) {

            System.err.println("Initial SessionFactory creation failed." + ex);
            throw new ExceptionInInitializerError(ex);
        }
    }
}
